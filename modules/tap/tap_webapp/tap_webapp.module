<?php

define('TAP_WEBAPP_VERSION', '0.1.0');

/**
 * Implements hook_uninstall
 */
function tap_webapp_uninstall() {
    db_query("DELETE FROM {variable} WHERE name LIKE '%s%%'", 'tap_webapp');
}

/**
 * Implements hook_menu()
 */
function tap_webapp_menu() {

    $items['admin/tap/webapp'] = array(
        'title'             => 'Web App',
        'page callback'     => 'drupal_get_form',
        'page arguments'    => array('tap_webapp_admin_form'),
        'access arguments'  => array('administer tap'),
        'type'              => MENU_LOCAL_TASK,
        'file'              => 'tap_webapp.admin.inc',
    );

    $items['node/%node/web-app'] = array(
        'title'             => 'TAP Web-App Preview',
        'page callback'     => 'tap_webapp_preview',
        'page arguments'    => array(1),
        'access arguments'  => array('access content'),
        'type'              => MENU_LOCAL_TASK
    );

    return $items;
}

/**
 * Implements hook_theme()
 */
function tap_webapp_theme() {

    $items = array(
        'tap_webapp_preview' => array(
            'variables' => array(
                'tourml_path' => NULL,
            ),
            'template'  => 'templates/tap-webapp-preview',
        ),
    );

    $items['tap_webapp_preview']['variables'] += tap_webapp_dependencies();

    return $items;
}

/**
 * Utility function to define dependencies of the webapp
 */
function tap_webapp_dependencies() {
    $module_path = url('', array('absolute' => TRUE)) . drupal_get_path('module', 'tap_webapp');
    $webapp_version = TAP_WEBAPP_VERSION;
    $tap_version = TAP_WEBAPP_VERSION;

    return array(
        'webapp_css_path' => "$module_path/tap-webapp-$webapp_version/Tap-$tap_version.css",
        'webapp_dependencies_path' => "$module_path/tap-webapp-$webapp_version/Tap-$tap_version-dependencies.js",
        'webapp_js_path' => "$module_path/tap-webapp-$webapp_version/Tap-$tap_version.js"
   ); 

}

function tap_webapp_preview($node) {

    // First, find the tour that this node is in
    if ($node->type != 'tour') {
        $tour_nid = $node->field_tour['und'][0]['target_id'];
        if (!is_numeric($tour_nid)) {
            return;
        } 
    }
    else {
        $tour_nid = $node->nid;
    }

    $tourMLuri = url('node/' . $tour_nid . '/tourml.xml');

    print theme('tap_webapp_preview', array('tourml_path' => $tourMLuri));

    die();
}

function tap_webapp_preprocess_tap_webapp_preview(&$vars) {

    if (($default_theme = variable_get('tap_webapp_default_theme', NULL)) !== NULL) {
        $file = file_load($default_theme);
        if (!empty($file)) {
            $vars['webapp_default_theme'] = file_create_url($file->uri);
        }
    }

    $navbar_labels = array(
        'tourstoplist' => t('Menu'),
        'tourkeypad' => t('Keypad'),
        'tourmap' => t('Map')
    );
    
    $default_navbar_items = variable_get('tap_webapp_navbar_items', array(
        'tourstoplist' => 'tourstoplist', 
        'tourkeypad' => 'tourkeypad', 
        'tourmap' => 'tourmap'
    ));

    foreach ($default_navbar_items as $key => $val) {
        $vars['default_navbar_items'][] = array(
            'endpoint' => $key,
            'label' => $navbar_labels[$key]
        );
    }

}

